name: Deploy to Production

on:
  push:
    branches: [staging]
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "YES" to confirm production deployment'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        if: github.event.inputs.confirm != 'YES'
        run: |
          echo "::error::You must type YES (all capitals) to confirm production deployment"
          exit 1
      - name: Check branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/staging" ]]; then
            echo "::error::This workflow must be run from the staging branch"
            exit 1
          fi

  promote-to-production:
    needs: validate-input
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://carinyaparc.com.au
    steps:
      - name: Checkout staging
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for lint on staging
        uses: lewagon/wait-on-check-action@v1.4.0
        with:
          ref: ${{ github.sha }}
          check-name: 'lint'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

      - name: Wait for tests on staging
        uses: lewagon/wait-on-check-action@v1.4.0
        with:
          ref: ${{ github.sha }}
          check-name: 'test'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

      - name: Create PR from staging to main
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: promote staging â†’ main'
          title: 'Automated promotion of staging â†’ main'
          body: |
            This PR was opened automatically after CI passed on staging.
          base: main
          branch: staging-to-main

      - name: Auto-merge the PR
        if: success()
        uses: pascalgn/automerge-action@v0.16.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_LABELS: ''
          MERGE_METHOD: merge
          MERGE_DELETE_BRANCH: true

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date for tag
        id: date
        run: echo "date=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create & push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git tag "release-${{ steps.date.outputs.date }}"
          git push origin "release-${{ steps.date.outputs.date }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Production Release ${{ steps.date.outputs.date }}
          tag_name: release-${{ steps.date.outputs.date }}
          body: |
            ðŸš€ Production deployment from staging branch

            - Deployment date: ${{ steps.date.outputs.date }}
            - Release branch: main
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log success
        if: success()
        run: echo "âœ… Successfully deployed to production!"
