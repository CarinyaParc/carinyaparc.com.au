name: Deploy to Staging

on:
  push:
    branches: [dev]
  workflow_dispatch:
    inputs:
      force_promotion:
        description: 'Force promotion even if checks fail (use with caution)'
        type: boolean
        default: false

jobs:
  check-and-promote:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Wait for lint checks
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'lint'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Wait for unit tests
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'test'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Wait for e2e tests
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'e2e'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success,skipped

      - name: Check for merge conflicts with staging
        run: |
          git fetch origin staging
          if git merge-tree $(git merge-base FETCH_HEAD HEAD) FETCH_HEAD HEAD | grep -i "<<<<<"; then
            echo "::error::Merge conflicts detected with staging branch"
            exit 1
          else
            echo "No merge conflicts detected with staging branch"
          fi
        continue-on-error: ${{ github.event.inputs.force_promotion == 'true' }}

      - name: Promote to staging
        if: success() || github.event.inputs.force_promotion == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout staging
          git merge dev --ff-only
          git push origin staging
          
      - name: Create status comment
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Successfully promoted to staging! View the staging deployment when it completes.'
            })

      - name: Notify on failure
        if: failure() && github.event_name != 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Auto-promotion to staging failed. Please check the workflow run for details.'
            })
